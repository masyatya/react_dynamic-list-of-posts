{"version":3,"sources":["components/PostsList/PostsList.jsx","api/comments.js","components/NewCommentForm/NewCommentForm.jsx","components/PostComments/PostComments.jsx","api/posts.js","components/PostDetails/PostDetails.jsx","components/UserSelect/UserSelect.jsx","App.jsx","index.js"],"names":["PostsList","posts","setSelectPostId","selectPostId","className","map","post","key","id","userId","title","type","onClick","handleClick","BASE_URL","postId","a","fetch","then","response","json","result","data","comments","filter","comment","commentId","url","options","method","name","email","body","JSON","stringify","NewCommentForm","useState","userName","setUserName","setEmail","setBody","handleChange","event","target","value","handleSubmit","preventDefault","addPostComment","onSubmit","placeholder","onChange","PostComments","setComments","isHide","setIsHide","deleteComment","deletePostComment","useEffect","getPostComments","length","getUserPosts","PostDetails","postById","setPostById","getPostDetails","UserSelect","selectUser","setSelectUser","setPosts","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0cc62311.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './PostsList.scss';\n\nexport const PostsList = ({\n  posts,\n  setSelectPostId,\n  selectPostId,\n}) => {\n  const handleClick = (post) => {\n    if (selectPostId === post.id) {\n      setSelectPostId(0);\n    } else {\n      setSelectPostId(post.id);\n    }\n  };\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n      <ul className=\"PostsList__list\">\n        {posts.map(post => (\n          <li className=\"PostsList__item\" key={post.id}>\n            <div>\n              <b>{`[User #${post.userId}]: `}</b>\n              {post.title}\n            </div>\n            <button\n              type=\"button\"\n              className=\"PostsList__button button\"\n              onClick={(() => handleClick(post))}\n            >\n              {selectPostId === post.id ? 'Close' : 'Open'}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nPostsList.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  setSelectPostId: PropTypes.func.isRequired,\n  selectPostId: PropTypes.number.isRequired,\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport async function getPostComments(postId) {\n  const comments = await fetch(`${BASE_URL}/comments`)\n    .then(response => response.json())\n    .then(result => result.data);\n\n  return comments.filter(comment => comment.postId === postId);\n}\n\nexport async function deletePostComment(commentId) {\n  const url = `${BASE_URL}/comments/${commentId}`;\n  const options = {\n    method: 'DELETE',\n  };\n\n  const comments = await fetch(url, options)\n    .then(response => response.json());\n\n  return comments;\n}\n\nexport async function addPostComment({\n  postId,\n  name,\n  email,\n  body,\n}) {\n  const url = `${BASE_URL}/comments`;\n  const options = {\n    method: 'POST',\n    body: JSON.stringify({\n      postId,\n      name,\n      email,\n      body,\n    }),\n  };\n\n  const comments = await fetch(url, options)\n    .then(response => response.json());\n\n  return comments;\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { addPostComment } from '../../api/comments';\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = ({ selectPostId }) => {\n  const [userName, setUserName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setUserName(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'body':\n        setBody(value);\n        break;\n      default:\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    addPostComment({\n      postId: selectPostId,\n      name: userName,\n      email,\n      body,\n    });\n\n    setUserName('');\n    setEmail('');\n    setBody('');\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={event => handleSubmit(event)}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={userName}\n          onChange={event => handleChange(event)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={event => handleChange(event)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={body}\n          onChange={event => handleChange(event)}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  selectPostId: PropTypes.number.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { NewCommentForm } from '../NewCommentForm';\nimport { deletePostComment, getPostComments } from '../../api/comments';\n\nexport const PostComments = ({ selectPostId }) => {\n  const [comments, setComments] = useState([]);\n  const [isHide, setIsHide] = useState(false);\n\n  const deleteComment = (commentId) => {\n    deletePostComment(commentId);\n  };\n\n  useEffect(() => {\n    getPostComments(selectPostId).then(result => setComments(result));\n  }, [comments]);\n\n  return (\n    <section className=\"PostDetails__comments\">\n      {comments.length > 0\n        && (\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={() => setIsHide(!isHide)}\n          >\n            {`${isHide ? 'Show ' : 'Hide '} ${comments.length} comments`}\n          </button>\n        )\n      }\n      {isHide || (\n        <ul className=\"PostDetails__list\">\n          {comments && comments.length > 0\n            && comments.map(comment => (\n              <li className=\"PostDetails__list-item\" key={comment.id}>\n                <button\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                  onClick={() => deleteComment(comment.id)}\n                >\n                  X\n                </button>\n                <p>{comment.body}</p>\n              </li>\n            ))}\n        </ul>\n      )}\n\n      <div className=\"PostDetails__form-wrapper\">\n        <NewCommentForm\n          selectPostId={selectPostId}\n        />\n      </div>\n    </section>\n  );\n};\n\nPostComments.propTypes = {\n  selectPostId: PropTypes.number.isRequired,\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport async function getUserPosts(userId) {\n  const posts = await fetch(`${BASE_URL}/posts`)\n    .then(response => response.json())\n    .then(result => result.data);\n\n  if (userId === 0) {\n    return posts;\n  }\n\n  return posts.filter(post => post.userId === userId);\n}\n\nexport async function getPostDetails(postId) {\n  const data = await fetch(`${BASE_URL}/posts/${postId}`)\n    .then(response => response.json())\n    .then(result => result.data);\n\n  return data;\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { PostComments } from '../PostComments';\nimport './PostDetails.scss';\nimport { getPostDetails } from '../../api/posts';\n\nexport const PostDetails = ({ selectPostId }) => {\n  const [postById, setPostById] = useState(null);\n\n  useEffect(() => {\n    if (selectPostId === 0) {\n      setPostById(null);\n    } else {\n      getPostDetails(selectPostId).then(result => setPostById(result));\n    }\n  }, [selectPostId]);\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      {!postById || (\n        <section className=\"PostDetails__post\">\n          <p className=\"PostDetails__title\">{postById.title}</p>\n          <PostComments selectPostId={selectPostId} />\n        </section>\n      )}\n\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  selectPostId: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getUserPosts } from '../../api/posts';\n\nexport const UserSelect = ({\n  selectUser,\n  setSelectUser,\n  setPosts,\n}) => {\n  const handleChange = (event) => {\n    const userId = +event.target.value;\n\n    setSelectUser(userId);\n    getUserPosts(userId)\n      .then(result => setPosts(result));\n  };\n\n  return (\n    <label>\n      Select a user: &nbsp;\n\n      <select\n        className=\"App__user-selector\"\n        value={selectUser}\n        onChange={event => handleChange(event)}\n      >\n        <option value=\"0\">All users</option>\n        <option value=\"1\">Leanne Graham</option>\n        <option value=\"2\">Ervin Howell</option>\n        <option value=\"3\">Clementine Bauch</option>\n        <option value=\"4\">Patricia Lebsack</option>\n        <option value=\"5\">Chelsey Dietrich</option>\n        <option value=\"6\">Mrs. Dennis Schulist</option>\n        <option value=\"7\">Kurtis Weissnat</option>\n        <option value=\"8\">Nicholas Runolfsdottir V</option>\n        <option value=\"9\">Glenna Reichert</option>\n        <option value=\"10\">Leanne Graham</option>\n      </select>\n    </label>\n  );\n};\n\nUserSelect.propTypes = {\n  selectUser: PropTypes.number.isRequired,\n  setSelectUser: PropTypes.func.isRequired,\n  setPosts: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { UserSelect } from './components/UserSelect';\nimport { getUserPosts } from './api/posts';\n\nconst App = () => {\n  const [posts, setPosts] = useState([]);\n  const [selectUser, setSelectUser] = useState(0);\n  const [selectPostId, setSelectPostId] = useState(0);\n\n  useEffect(() => {\n    getUserPosts(0).then(data => setPosts(data));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <UserSelect\n          selectUser={selectUser}\n          setSelectUser={setSelectUser}\n          setPosts={setPosts}\n        />\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={posts}\n            selectPostId={selectPostId}\n            setSelectPostId={setSelectPostId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <PostDetails selectPostId={selectPostId} />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}